{"ast":null,"code":"import { User } from \"./user.model\";\nimport { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataServices {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json\";\n    this.users = [new User(\"Marco\", \"Cardenas\"), new User(\"Lucas\", \"Cardenas\")];\n  }\n  createUsers(usuarios) {\n    this.httpClient.put(this.url, usuarios).subscribe({\n      next: res => console.log(res),\n      error: error => console.log('error: ' + error)\n    });\n  }\n  get saludar() {}\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});\nnew EventEmitter();\nnewUser(user, User);\n{\n  this.users.push(user);\n  this.createUsers(this.users);\n}","map":{"version":3,"names":["User","EventEmitter","DataServices","constructor","httpClient","url","users","createUsers","usuarios","put","subscribe","next","res","console","log","error","saludar","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","newUser","user","push"],"sources":["D:\\Angular\\app\\src\\app\\create-users\\data.services.ts"],"sourcesContent":["import { User } from \"./user.model\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\"\r\nimport { HttpClient } from \"@angular/common/http\"\r\n\r\n\r\n@Injectable()\r\nexport class DataServices{\r\n    url:string = \"https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json\"\r\n    users: User[] = [new User(\"Marco\", \"Cardenas\"), new User(\"Lucas\", \"Cardenas\")]\r\n\r\n    constructor(private httpClient:HttpClient){}\r\n\r\n    createUsers(usuarios:User[]){\r\n        this.httpClient.put(this.url, usuarios)\r\n            .subscribe({\r\n                next: (res) => console.log(res),\r\n                error: (error) => console.log('error: ' + error)\r\n            })\r\n    }\r\n\r\n    get\r\n\r\n    saludar = new EventEmitter<string>();\r\n\r\n    newUser(user: User){\r\n        this.users.push(user)\r\n        this.createUsers(this.users)\r\n    }\r\n\r\n    // saludar(nombre:string){\r\n    //     // this.\r\n    // }\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,cAAc;AACnC,SAASC,YAAY,QAAoB,eAAe;;;AAKxD,OAAM,MAAOC,YAAY;EAIrBC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,GAAG,GAAU,uEAAuE;IACpF,KAAAC,KAAK,GAAW,CAAC,IAAIN,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,IAAIA,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;EAEnC;EAE3CO,WAAWA,CAACC,QAAe;IACvB,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,IAAI,CAACJ,GAAG,EAAEG,QAAQ,CAAC,CAClCE,SAAS,CAAC;MACPC,IAAI,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAC/BG,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK;KAClD,CAAC;EACV;EAEA,IAEAC,OAAOA,CAAA,GAAC;;AAhBCd,YAAY,C;mBAAZA,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZlB,YAAY,C;SAAZA,YAAY;EAAAmB,OAAA,EAAZnB,YAAY,CAAAoB;AAAA;AAgBX,IAAIrB,YAAY,EAAU;AAEpCsB,OAAO,CAACC,IAAI,EAAExB,IAAI,CAAC;AAAA;EACf,IAAI,CAACM,KAAK,CAACmB,IAAI,CAACD,IAAI,CAAC;EACrB,IAAI,CAACjB,WAAW,CAAC,IAAI,CAACD,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}