{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataServices {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json';\n    this.users = [];\n    this.userSelectedSource = new Subject();\n    this.userSelected$ = this.userSelectedSource.asObservable();\n    this.saludar = new EventEmitter();\n  }\n  createUsers(usuarios) {\n    this.httpClient.put(this.url, usuarios).subscribe({\n      next: res => console.log(res),\n      error: error => console.log('error: ' + error)\n    });\n  }\n  getUsers() {\n    return this.httpClient.get(this.url);\n  }\n  setUsers(users) {\n    this.users = users;\n  }\n  newUser(user) {\n    this.users.push(user);\n    this.createUsers(this.users);\n  }\n  // userSelected = new EventEmitter<any>();\n  // userSelected\n  // userSelected(user:User, id:number){\n  //   this.user = user\n  //   this.id = id\n  // }\n  userSelected(user, index) {\n    this.userSelectedSource.next({\n      user,\n      index\n    });\n  }\n  updateUser(id, user) {\n    let url = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos/' + id + '.json';\n    this.httpClient.put(url, user).subscribe({\n      next: res => get,\n      error: error => console.log(error)\n    });\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});","map":{"version":3,"names":["EventEmitter","Subject","DataServices","constructor","httpClient","url","users","userSelectedSource","userSelected$","asObservable","saludar","createUsers","usuarios","put","subscribe","next","res","console","log","error","getUsers","get","setUsers","newUser","user","push","userSelected","index","updateUser","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["D:\\Angular\\app\\src\\app\\create-users\\data.services.ts"],"sourcesContent":["import { User } from './user.model';\r\nimport { EventEmitter, Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DataServices {\r\n  url: string = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json';\r\n  users: User[] = [];\r\n  private userSelectedSource = new Subject<{ user: User, index: number }>();\r\n  userSelected$ = this.userSelectedSource.asObservable();\r\n  \r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  createUsers(usuarios: User[]) {\r\n    this.httpClient.put(this.url, usuarios).subscribe({\r\n      next: (res) => console.log(res),\r\n      error: (error) => console.log('error: ' + error),\r\n    });\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(this.url);\r\n  }\r\n\r\n  setUsers(users: User[]) {\r\n    this.users = users;\r\n  }\r\n\r\n  newUser(user: User) {\r\n    this.users.push(user);\r\n    this.createUsers(this.users);\r\n  }\r\n  // userSelected = new EventEmitter<any>();\r\n  \r\n  // userSelected\r\n  // userSelected(user:User, id:number){\r\n  //   this.user = user\r\n  //   this.id = id\r\n  // }\r\n  userSelected(user: User, index: number) {\r\n    this.userSelectedSource.next({ user, index });\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    let url = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos/' + id + '.json';\r\n    this.httpClient.put(url, user).subscribe({\r\n      next: (res) => get,\r\n      error: (error) => console.log(error),\r\n    });\r\n  }\r\n\r\n  saludar = new EventEmitter<string>();\r\n\r\n  // saludar(nombre:string){\r\n  //     // this.\r\n  // }\r\n}\r\n"],"mappings":"AACA,SAASA,YAAY,QAA4B,eAAe;AAEhE,SAAqBC,OAAO,QAAQ,MAAM;;;AAG1C,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAN9B,KAAAC,GAAG,GAAW,uEAAuE;IACrF,KAAAC,KAAK,GAAW,EAAE;IACV,KAAAC,kBAAkB,GAAG,IAAIN,OAAO,EAAiC;IACzE,KAAAO,aAAa,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IA2CtD,KAAAC,OAAO,GAAG,IAAIV,YAAY,EAAU;EAxCS;EAE7CW,WAAWA,CAACC,QAAgB;IAC1B,IAAI,CAACR,UAAU,CAACS,GAAG,CAAC,IAAI,CAACR,GAAG,EAAEO,QAAQ,CAAC,CAACE,SAAS,CAAC;MAChDC,IAAI,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAC/BG,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK;KAChD,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAAChB,UAAU,CAACiB,GAAG,CAAS,IAAI,CAAChB,GAAG,CAAC;EAC9C;EAEAiB,QAAQA,CAAChB,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAiB,OAAOA,CAACC,IAAU;IAChB,IAAI,CAAClB,KAAK,CAACmB,IAAI,CAACD,IAAI,CAAC;IACrB,IAAI,CAACb,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC;EAC9B;EACA;EAEA;EACA;EACA;EACA;EACA;EACAoB,YAAYA,CAACF,IAAU,EAAEG,KAAa;IACpC,IAAI,CAACpB,kBAAkB,CAACQ,IAAI,CAAC;MAAES,IAAI;MAAEG;IAAK,CAAE,CAAC;EAC/C;EAEAC,UAAUA,CAACC,EAAU,EAAEL,IAAU;IAC/B,IAAInB,GAAG,GAAG,mEAAmE,GAAGwB,EAAE,GAAG,OAAO;IAC5F,IAAI,CAACzB,UAAU,CAACS,GAAG,CAACR,GAAG,EAAEmB,IAAI,CAAC,CAACV,SAAS,CAAC;MACvCC,IAAI,EAAGC,GAAG,IAAKK,GAAG;MAClBF,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAACC,KAAK;KACpC,CAAC;EACJ;;AA7CWjB,YAAY,C;mBAAZA,YAAY,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZ/B,YAAY,C;SAAZA,YAAY;EAAAgC,OAAA,EAAZhC,YAAY,CAAAiC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}