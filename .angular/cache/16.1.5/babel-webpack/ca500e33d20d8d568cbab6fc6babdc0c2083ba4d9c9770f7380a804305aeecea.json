{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataServices {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json';\n    this.users = [];\n    this.saludar = new EventEmitter();\n  }\n  createUsers(usuarios) {\n    this.httpClient.put(this.url, usuarios).subscribe({\n      next: res => console.log(res),\n      error: error => console.log('error: ' + error)\n    });\n  }\n  getUsers() {\n    return this.httpClient.get(this.url);\n  }\n  setUsers(users) {\n    this.users = users;\n  }\n  newUser(user) {\n    this.users.push(user);\n    this.createUsers(this.users);\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});","map":{"version":3,"names":["EventEmitter","DataServices","constructor","httpClient","url","users","saludar","createUsers","usuarios","put","subscribe","next","res","console","log","error","getUsers","get","setUsers","newUser","user","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["D:\\Angular\\app\\src\\app\\create-users\\data.services.ts"],"sourcesContent":["import { User } from './user.model';\r\nimport { EventEmitter, Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DataServices {\r\n  url: string = 'https://totemic-antenna-298717-default-rtdb.firebaseio.com/datos.json';\r\n  users: User[] = []\r\n  \r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  createUsers(usuarios: User[]) {\r\n    this.httpClient.put(this.url, usuarios).subscribe({\r\n      next: (res) => console.log(res),\r\n      error: (error) => console.log('error: ' + error),\r\n    });\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(this.url);\r\n  }\r\n  \r\n  setUsers(users:User[]){\r\n    this.users = users\r\n  }\r\n\r\n  saludar = new EventEmitter<string>();\r\n\r\n  newUser(user: User) {\r\n    this.users.push(user);\r\n    this.createUsers(this.users);\r\n  }\r\n\r\n  // saludar(nombre:string){\r\n  //     // this.\r\n  // }\r\n}\r\n"],"mappings":"AACA,SAASA,YAAY,QAA4B,eAAe;;;AAKhE,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,GAAG,GAAW,uEAAuE;IACrF,KAAAC,KAAK,GAAW,EAAE;IAmBlB,KAAAC,OAAO,GAAG,IAAIN,YAAY,EAAU;EAjBS;EAE7CO,WAAWA,CAACC,QAAgB;IAC1B,IAAI,CAACL,UAAU,CAACM,GAAG,CAAC,IAAI,CAACL,GAAG,EAAEI,QAAQ,CAAC,CAACE,SAAS,CAAC;MAChDC,IAAI,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAC/BG,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK;KAChD,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACb,UAAU,CAACc,GAAG,CAAS,IAAI,CAACb,GAAG,CAAC;EAC9C;EAEAc,QAAQA,CAACb,KAAY;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAIAc,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACD,IAAI,CAAC;IACrB,IAAI,CAACb,WAAW,CAAC,IAAI,CAACF,KAAK,CAAC;EAC9B;;AA1BWJ,YAAY,C;mBAAZA,YAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZxB,YAAY,C;SAAZA,YAAY;EAAAyB,OAAA,EAAZzB,YAAY,CAAA0B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}